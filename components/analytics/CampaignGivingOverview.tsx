import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { getCampaignCategorySummaries } from "@/lib/campaigns"
import { formatCurrency } from "@/lib/utils"

interface CampaignGivingOverviewProps {
  departmentId: string
}

export async function CampaignGivingOverview({ departmentId }: CampaignGivingOverviewProps) {
  const categories = await getCampaignCategorySummaries(departmentId)

  if (categories.length === 0) {
    return (
      <Card className="border-none bg-white/70 shadow-lg shadow-slate-900/5">
        <CardHeader>
          <CardTitle>Campaign Giving Overview</CardTitle>
          <CardDescription>No campaign giving recorded yet.</CardDescription>
        </CardHeader>
      </Card>
    )
  }

  return (
    <Card className="border-none bg-white/80 shadow-lg shadow-slate-900/5">
      <CardHeader>
        <CardTitle>Campaign Giving Overview</CardTitle>
        <CardDescription>
          Track how churches, groups, and zones are contributing across active campaigns.
        </CardDescription>
      </CardHeader>
      <CardContent>
        <div className="space-y-8">
          {categories.map((category) => (
            <div
              key={category.id}
              className="rounded-2xl border border-slate-200/70 bg-white/70 p-6 shadow-sm shadow-slate-900/5"
            >
              <div className="flex flex-col gap-2 md:flex-row md:items-center md:justify-between">
                <div>
                  <div className="flex items-center gap-2">
                    <h3 className="text-lg font-semibold text-slate-900">{category.name}</h3>
                    {category.autoGenerated && (
                      <span className="rounded-full bg-slate-100 px-2.5 py-0.5 text-xs font-medium text-slate-500">
                        Auto-created
                      </span>
                    )}
                  </div>
                  <p className="text-sm text-slate-500">
                    {category.paymentCount} contribution{category.paymentCount === 1 ? "" : "s"}
                  </p>
                </div>
                <div className="text-right">
                  <div className="text-2xl font-semibold text-slate-900">
                    {formatCurrency(category.totalAmount, "GBP")}
                  </div>
                  <p className="text-xs uppercase tracking-wide text-slate-400">Zone total</p>
                </div>
              </div>

              {category.zoneTotals.length > 0 && (
                <div className="mt-4 grid gap-3 sm:grid-cols-2 lg:grid-cols-3">
                  {category.zoneTotals.map((zone) => (
                    <div
                      key={zone.id}
                      className="rounded-xl border border-emerald-100/80 bg-emerald-50/50 px-4 py-3"
                    >
                      <div className="text-xs font-medium uppercase tracking-wide text-emerald-600">
                        {zone.name}
                      </div>
                      <div className="text-base font-semibold text-emerald-800">
                        {formatCurrency(zone.totalAmount, "GBP")}
                      </div>
                    </div>
                  ))}
                </div>
              )}

              {category.groups.length > 0 && (
                <div className="mt-6 space-y-4">
                  {category.groups.map((group) => (
                    <div
                      key={group.id}
                      className="rounded-xl border border-slate-200/70 bg-white/60 p-4"
                    >
                      <div className="flex flex-col gap-2 sm:flex-row sm:items-center sm:justify-between">
                        <div>
                          <div className="text-sm font-semibold text-slate-800">{group.name}</div>
                          <div className="text-xs uppercase tracking-wide text-slate-400">
                            {group.zoneName}
                          </div>
                        </div>
                        <div className="text-sm font-semibold text-slate-900">
                          {formatCurrency(group.totalAmount, "GBP")}
                        </div>
                      </div>

                      {group.churches.length > 0 && (
                        <div className="mt-3 grid gap-2 sm:grid-cols-2 lg:grid-cols-3">
                          {group.churches.map((church) => (
                            <div
                              key={church.id}
                              className="rounded-lg border border-slate-200/60 bg-slate-50/70 px-3 py-2 text-sm"
                            >
                              <div className="font-medium text-slate-700">{church.name}</div>
                              <div className="text-xs font-semibold text-slate-500">
                                {formatCurrency(church.totalAmount, "GBP")}
                              </div>
                            </div>
                          ))}
                        </div>
                      )}
                    </div>
                  ))}
                </div>
              )}
            </div>
          ))}
        </div>
      </CardContent>
    </Card>
  )
}
